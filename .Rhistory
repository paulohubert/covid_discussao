transform(elapsed = as.numeric(time - mindata, units = "days"))
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-01-01', format = '%Y-%m-%d'))) %>%
mutate(timedead = ifelse(cum_dead > 0, time, mtime)) %>%
drop(mtime)
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-01-01', format = '%Y-%m-%d'))) %>%
mutate(timedead = ifelse(cum_dead > 0, time, mtime))
View(corona_global)
# Obtendo os dados históricos por país
corona_global = load_nCov2019(lang = "en") %>%
pluck(3) %>%
as_tibble() %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-19', format= '%Y-%m-%d'), 3, cum_dead)) %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-20', format= '%Y-%m-%d'), 7, cum_dead))  %>%
group_by(country) %>%
mutate(mindata = min(time)) %>%
ungroup() %>%
pad(interval = "day", by = "time", group = "country") %>%
fill(cum_confirm, cum_heal, cum_dead) %>%
transform(elapsed = as.numeric(time - mindata, units = "days"))
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-01-01', format = '%Y-%m-%d'))) %>%
mutate(timedead = ifelse(cum_dead > 0, time, mtime))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = ifelse(cum_dead > 0, time, as.POSIXct(strptime('2021-01-01', format = '%Y-%m-%d'))))
# Obtendo os dados históricos por país
corona_global = load_nCov2019(lang = "en") %>%
pluck(3) %>%
as_tibble() %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-19', format= '%Y-%m-%d'), 3, cum_dead)) %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-20', format= '%Y-%m-%d'), 7, cum_dead))  %>%
group_by(country) %>%
mutate(mindata = min(time)) %>%
ungroup() %>%
pad(interval = "day", by = "time", group = "country") %>%
fill(cum_confirm, cum_heal, cum_dead) %>%
transform(elapsed = as.numeric(time - mindata, units = "days"))
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = ifelse(cum_dead > 0, time, as.POSIXct(strptime('2021-01-01', format = '%Y-%m-%d'))))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = ifelse(cum_dead > 0, time, strptime('2021-01-01', format = '%Y-%m-%d')))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = ifelse(cum_dead > 0, time, time + 365))
View(corona_global)
class(corona_global$time)
class(corona_global$time[1])
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = ifelse(cum_dead > 0, time, as.Date(time + 365)))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = ifelse(cum_dead > 0, time, as.Date(strptime('2021-03-19', format= '%Y-%m-%d'))))
View(corona_global)
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = as.Date(ifelse(cum_dead > 0, time, strptime('2021-03-19', format= '%Y-%m-%d'))))
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = as.Date(ifelse(cum_dead > 0, time, rep(strptime('2021-03-19', format= '%Y-%m-%d'), nrow(corona_global)))))
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = ifelse(cum_dead > 0, time, rep(strptime('2021-03-19', format= '%Y-%m-%d'), nrow(corona_global))))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(timedead = ifelse(cum_dead > 0, time, strptime('2021-03-19', format= '%Y-%m-%d')))
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = strptime('2021-03-19', format= '%Y-%m-%d'))
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-03-19', format= '%Y-%m-%d')))
View(corona_global)
# Obtendo os dados históricos por país
corona_global = load_nCov2019(lang = "en") %>%
pluck(3) %>%
as_tibble() %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-19', format= '%Y-%m-%d'), 3, cum_dead)) %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-20', format= '%Y-%m-%d'), 7, cum_dead))  %>%
group_by(country) %>%
mutate(mindata = min(time)) %>%
ungroup() %>%
pad(interval = "day", by = "time", group = "country") %>%
fill(cum_confirm, cum_heal, cum_dead) %>%
transform(elapsed = as.numeric(time - mindata, units = "days"))
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-03-19', format= '%Y-%m-%d')))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-03-19', format= '%Y-%m-%d'))) %>%
mutate(timedead = ifelse(cum_dead > 0, time, mtime))
# Obtendo os dados históricos por país
corona_global = load_nCov2019(lang = "en") %>%
pluck(3) %>%
as_tibble() %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-19', format= '%Y-%m-%d'), 3, cum_dead)) %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-20', format= '%Y-%m-%d'), 7, cum_dead))  %>%
group_by(country) %>%
mutate(mindata = min(time)) %>%
ungroup() %>%
pad(interval = "day", by = "time", group = "country") %>%
fill(cum_confirm, cum_heal, cum_dead) %>%
transform(elapsed = as.numeric(time - mindata, units = "days"))
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-03-19', format= '%Y-%m-%d'))) %>%
mutate(timedead = ifelse(cum_dead > 0, time, mtime))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-03-19', format= '%Y-%m-%d'))) %>%
mutate(timedead = as.POSIXct(ifelse(cum_dead > 0, time, mtime)))
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-03-19', format= '%Y-%m-%d'))) %>%
mutate(timedead = ifelse(cum_dead > 0, time, mtime))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
mutate(mtime = as.POSIXct(strptime('2021-03-19', format= '%Y-%m-%d'))) %>%
mutate(timedead = ifelse(cum_dead > 0, time, mtime))
View(corona_global)
# Data da primeira morte
corona_global = corona_global %>%
filter(cum_dead > 0) %>%
group_by(country) %>%
mutate(firstdeath = min(time))
# Obtendo os dados históricos por país
corona_global = load_nCov2019(lang = "en") %>%
pluck(3) %>%
as_tibble() %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-19', format= '%Y-%m-%d'), 3, cum_dead)) %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-20', format= '%Y-%m-%d'), 7, cum_dead))  %>%
group_by(country) %>%
mutate(mindata = min(time)) %>%
ungroup() %>%
pad(interval = "day", by = "time", group = "country") %>%
fill(cum_confirm, cum_heal, cum_dead) %>%
transform(elapsed = as.numeric(time - mindata, units = "days"))
# Data da primeira morte
first_death = corona_global %>%
filter(cum_dead > 0) %>%
group_by(country) %>%
mutate(firstdeath = min(time))
View(first_death)
View(first_death)
# Data da primeira morte
first_death = corona_global %>%
filter(cum_dead > 0) %>%
group_by(country) %>%
mutate(firstdeath = min(time))
View(first_death)
# Data da primeira morte
first_death = corona_global %>%
filter(cum_dead > 0) %>%
group_by(country) %>%
mutate(firstdeath = min(time)) %>%
as_tibble()
# Data da primeira morte
first_death = corona_global %>%
filter(cum_dead > 0) %>%
group_by(country) %>%
mutate(firstdeath = min(time)) %>%
as_tibble()
View(first_death)
View(corona_global)
# Data da primeira morte
first_death = corona_global %>%
filter(cum_dead > 0) %>%
group_by(country) %>%
summarise(firstdeath = min(time))
View(first_death)
View(first_death)
corona_global = corona_global %>% left_join(first_death, by = country)
corona_global = corona_global %>% left_join(first_death, by = "country")
View(corona_global)
setwd('/home/paulo/Documents/dados/covid/relatório/')
# Obtendo os dados históricos por país
corona_global = load_nCov2019(lang = "en") %>%
pluck(3) %>%
as_tibble() %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-19', format= '%Y-%m-%d'), 3, cum_dead)) %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-20', format= '%Y-%m-%d'), 7, cum_dead))  %>%
group_by(country) %>%
mutate(mindata = min(time)) %>%
ungroup() %>%
pad(interval = "day", by = "time", group = "country") %>%
fill(cum_confirm, cum_heal, cum_dead) %>%
transform(elapsed = as.numeric(time - mindata, units = "days"))
# Data da primeira morte
first_death = corona_global %>%
filter(cum_dead > 0) %>%
group_by(country) %>%
summarise(firstdeath = min(time))
corona_global = corona_global %>% left_join(first_death, by = "country")
corona_global %>% filter(country == 'Brazil') %>% View()
paises = c('Italy', 'Spain', 'United States', 'China', 'Brazil')
# Gráfico
g = ggplot(data = corona_global %>% filter(country %in% paises), aes(x = elapsed, y = log(cum_confirm), color = factor(country)))
g + geom_line() + geom_point() +ylab("Log(casos confirmados)") + xlab("Dias desde o primeiro caso") +
guides(col=guide_legend(title="País"))
# Calculando taxa de crescimento
corona_global = corona_global %>% group_by(country) %>% mutate(growth = (cum_confirm - lag(cum_confirm)) / lag(cum_confirm), growthd = ifelse(lag(cum_dead) == 0, NA, (cum_dead - lag(cum_dead))/lag(cum_dead)))
# Gráfico crescimento
data.labels = list(data.frame(pais = 'China', quarentine = 53,
x = 75,
y = 2.5,
label = 'Quarentena começa em Wuhan',
ymax = 100
),
data.frame(pais = 'Brasil', quarentine = 27,
x =20,
y = 1.5,
label = 'Quarentena começa em São Paulo',
ymax = 100
),
data.frame(pais = 'Itália', quarentine = 32,
x =25,
y = .7,
label = 'Quarentena em toda a Itália',
ymax = 2.5
),
data.frame(pais = 'EUA', quarentine = c(54, 60),
x =c(45, 50),
y = c(1.5, 1),
label = c('Trump declara apoio à quarentena de 15 dias', 'Trump manifesta dúvidas sobre a quarentena'),
ymax = 100
),
data.frame(pais = 'Reino Unido', quarentine = 46,
x =35,
y = 1,
label = c('Quarentena começa na Inglaterra'),
ymax = 100
))
paises = c('China', 'Brazil', 'Italy', 'United States', 'United Kingdom')
for(i in 1:length(paises)) {
data.label = data.labels[[i]]
pais = paises[i]
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue') +
geom_text(data = data.label, aes(x = x[2], y = y[2], label = label[2]), color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue')
}
ggsave(paste0('confirmed_', pais, '.png'))
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & time > firstdeath), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & time > first_death), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes')) +
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')
}
ggsave(paste0('dead_', pais, '.png'))
}
corona_global %>% filter(country == pais & time > firstdeath)
pais
corona_global %>% filter(time > firstdeath)
corona_global %>% filter(country == 'Brazil' & time > firstdeath)
for(i in 1:length(paises)) {
data.label = data.labels[[i]]
pais = paises[i]
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue') +
geom_text(data = data.label, aes(x = x[2], y = y[2], label = label[2]), color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue')
}
ggsave(paste0('confirmed_', pais, '.png'))
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & time > firstdeath), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & time > first_death), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes')) +
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')
}
ggsave(paste0('dead_', pais, '.png'))
}
g = ggplot(data = corona_global %>% filter(country == pais & time > firstdeath), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue')
print("wtf")
paises = c('China', 'Brazil', 'Italy', 'United States', 'United Kingdom')
for(i in 1:length(paises)) {
data.label = data.labels[[i]]
pais = paises[i]
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue') +
geom_text(data = data.label, aes(x = x[2], y = y[2], label = label[2]), color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue')
}
ggsave(paste0('confirmed_', pais, '.png'))
print("wtf")
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & time > firstdeath), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & time > first_death), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes')) +
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')
}
ggsave(paste0('dead_', pais, '.png'))
}
g = ggplot(data = corona_global %>% filter(country == pais & time > first_death), aes(x = elapsed, y = growthd))
corona_global %>% filter(country == pais & time > first_death)
pais
corona_global %>% filter(country == pais)
for(i in 1:length(paises)) {
data.label = data.labels[[i]]
pais = paises[i]
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue') +
geom_text(data = data.label, aes(x = x[2], y = y[2], label = label[2]), color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue')
}
ggsave(paste0('confirmed_', pais, '.png'))
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & time > firstdeath), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & time > firstdeath), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes')) +
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')
}
ggsave(paste0('dead_', pais, '.png'))
}
library(lubridate)
setwd('/home/paulo/Documents/dados/covid/relatório/')
# Obtendo os dados históricos por país
corona_global = load_nCov2019(lang = "en") %>%
pluck(3) %>%
as_tibble() %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-19', format= '%Y-%m-%d'), 3, cum_dead)) %>%
mutate(cum_dead = ifelse(country == "Brazil" & time == strptime('2020-03-20', format= '%Y-%m-%d'), 7, cum_dead))  %>%
group_by(country) %>%
mutate(mindata = min(time)) %>%
ungroup() %>%
pad(interval = "day", by = "time", group = "country") %>%
fill(cum_confirm, cum_heal, cum_dead) %>%
transform(elapsed = as.numeric(time - mindata, units = "days"))
# Data da primeira morte
first_death = corona_global %>%
filter(cum_dead > 0) %>%
group_by(country) %>%
summarise(firstdeath = min(time) + 3)
corona_global = corona_global %>% left_join(first_death, by = "country")
corona_global %>% filter(country == 'Brazil') %>% View()
paises = c('Italy', 'Spain', 'United States', 'China', 'Brazil')
# Gráfico
g = ggplot(data = corona_global %>% filter(country %in% paises), aes(x = elapsed, y = log(cum_confirm), color = factor(country)))
g + geom_line() + geom_point() +ylab("Log(casos confirmados)") + xlab("Dias desde o primeiro caso") +
guides(col=guide_legend(title="País"))
# Calculando taxa de crescimento
corona_global = corona_global %>% group_by(country) %>% mutate(growth = (cum_confirm - lag(cum_confirm)) / lag(cum_confirm), growthd = ifelse(lag(cum_dead) == 0, NA, (cum_dead - lag(cum_dead))/lag(cum_dead)))
# Gráfico crescimento
data.labels = list(data.frame(pais = 'China', quarentine = 53,
x = 75,
y = 2.5,
label = 'Quarentena começa em Wuhan',
ymax = 100
),
data.frame(pais = 'Brasil', quarentine = 27,
x =20,
y = 1.5,
label = 'Quarentena começa em São Paulo',
ymax = 100
),
data.frame(pais = 'Itália', quarentine = 32,
x =25,
y = .7,
label = 'Quarentena em toda a Itália',
ymax = 2.5
),
data.frame(pais = 'EUA', quarentine = c(54, 60),
x =c(45, 50),
y = c(1.5, 1),
label = c('Trump declara apoio à quarentena de 15 dias', 'Trump manifesta dúvidas sobre a quarentena'),
ymax = 100
),
data.frame(pais = 'Reino Unido', quarentine = 46,
x =35,
y = 1,
label = c('Quarentena começa na Inglaterra'),
ymax = 100
))
paises = c('China', 'Brazil', 'Italy', 'United States', 'United Kingdom')
for(i in 1:length(paises)) {
data.label = data.labels[[i]]
pais = paises[i]
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue') +
geom_text(data = data.label, aes(x = x[2], y = y[2], label = label[2]), color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & growth < data.label$ymax[1]), aes(x = elapsed, y = growth))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento diário dos casos confirmados'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growth, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')  +
geom_text(data = data.label, aes(x = x[1], y = y[1], label = label[1]), color = 'blue')
}
ggsave(paste0('confirmed_', pais, '.png'))
if(i == 4) {
g = ggplot(data = corona_global %>% filter(country == pais & time > firstdeath), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes'))+
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue') +
geom_vline(xintercept = data.label$quarentine[2], color = 'blue')
} else {
g = ggplot(data = corona_global %>% filter(country == pais & time > firstdeath), aes(x = elapsed, y = growthd))
g + geom_line(lty = 'dashed') + geom_point() + xlab("Dias desde o primeiro caso") + ylab("Taxa de crescimento") +
ggtitle(paste0(data.label$pais, '- crescimento das mortes')) +
#geom_hline(yintercept = as.numeric((corona_global %>% filter(country == pais) %>% summarise(mean(growthd, na.rm = T)))[2]), lty = 'dashed', color= 'red') +
geom_vline(xintercept = data.label$quarentine[1], color = 'blue')
}
ggsave(paste0('dead_', pais, '.png'))
}
